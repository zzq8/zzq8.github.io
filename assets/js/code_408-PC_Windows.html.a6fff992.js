"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[6472],{9874:(i,e)=>{e.A=(i,e)=>{const a=i.__vccOpts||i;for(const[i,s]of e)a[i]=s;return a}},5228:(i,e,a)=>{a.r(e),a.d(e,{comp:()=>l,data:()=>r});var s=a(2360);const n=[(0,s.Fv)('<h1 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span><a href="https://www.zhihu.com/question/33635511/answer/57567053" target="_blank" rel="noopener noreferrer">Windows</a></span></a></h1><p>win 上用linux CLI：</p><p>2020年9月，<mark>WSL</mark> 2开始向Windows 10 Version 1903/1909和Windows 10 May 2020（20H1/Version 2004）的用户推送。WSL 2支持<a href="https://zh.wikipedia.org/wiki/GUI" target="_blank" rel="noopener noreferrer">GUI</a>应用[<a href="https://zh.wikipedia.org/zh-cn/%E9%80%82%E7%94%A8%E4%BA%8ELinux%E7%9A%84Windows%E5%AD%90%E7%B3%BB%E7%BB%9F#cite_note-19" target="_blank" rel="noopener noreferrer">19]</a>。</p><p>C:\\Windows 路径 exe 文件可以直接 cmd 调用</p><ul><li>将文件重命名为 jq.exe</li><li>cmd： jq --version</li></ul><h1 id="_1-常用快捷键" tabindex="-1"><a class="header-anchor" href="#_1-常用快捷键"><span>1.常用快捷键</span></a></h1><ul><li><h4 id="win-ppause-看电脑系统参数" tabindex="-1"><a class="header-anchor" href="#win-ppause-看电脑系统参数"><span>win+ppause 看电脑系统参数</span></a></h4></li><li><h4 id="win-k-打开「连接」设备-快速连耳机-暂时联想记忆为link" tabindex="-1"><a class="header-anchor" href="#win-k-打开「连接」设备-快速连耳机-暂时联想记忆为link"><span>Win+K 打开「连接」设备 快速连耳机 （暂时联想记忆为Link）</span></a></h4></li><li><p>recent</p></li><li><p>regedit</p></li><li><h4 id="calc-mspaint-notepad" tabindex="-1"><a class="header-anchor" href="#calc-mspaint-notepad"><span>calc mspaint notepad</span></a></h4></li><li><h4 id="ctrl-d-删除文件" tabindex="-1"><a class="header-anchor" href="#ctrl-d-删除文件"><span>ctrl+D 删除文件</span></a></h4></li><li><h4 id="win-p设置屏幕投影功能" tabindex="-1"><a class="header-anchor" href="#win-p设置屏幕投影功能"><span>win+P设置屏幕投影功能</span></a></h4></li><li><h4 id="在文本输入过程中-键入windows徽标键-。-句点-将显示表情符号键盘。" tabindex="-1"><a class="header-anchor" href="#在文本输入过程中-键入windows徽标键-。-句点-将显示表情符号键盘。"><span>在文本输入过程中，键入Windows徽标键 + 。 (句点) . 将显示表情符号键盘。</span></a></h4></li><li><h4 id="ctrl-alt-tab-打开切换界面-可以使用鼠标在打开的项目之间切换" tabindex="-1"><a class="header-anchor" href="#ctrl-alt-tab-打开切换界面-可以使用鼠标在打开的项目之间切换"><span>Ctrl+Alt+Tab 打开切换界面，可以使用鼠标在打开的项目之间切换</span></a></h4></li><li><h4 id="alt-esc-其实类似-alt-tab-不过它是让我们在没有最小化的窗口之间快速切换-按第一次打开的顺序切换【自我感觉少一步视图-更快】" tabindex="-1"><a class="header-anchor" href="#alt-esc-其实类似-alt-tab-不过它是让我们在没有最小化的窗口之间快速切换-按第一次打开的顺序切换【自我感觉少一步视图-更快】"><span>Alt+Esc 其实类似 Alt + Tab ，不过它是让我们在没有最小化的窗口之间快速切换；按第一次打开的顺序切换【自我感觉少一步视图，更快】</span></a></h4><ul><li>Alt+Esc键快速切换打开程序和Alt+Tab切换有两处不同，其他效果都是一样的。不同之一就是Alt+Esc没有缩略图预览，它是按照从右向左的顺序依次切换。</li><li>当您只打开两个或三个窗口时， Alt+效果最好。Esc如果您打开的窗口超过三个，我们建议使用<a href="https://www.computerhope.com/jargon/a/alt-tab.htm" target="_blank" rel="noopener noreferrer">Alt+Tab</a>或<a href="https://www.computerhope.com/jargon/w/winkey.htm" target="_blank" rel="noopener noreferrer">Windows key</a>+<a href="https://www.computerhope.com/jargon/t/tab.htm" target="_blank" rel="noopener noreferrer">Tab</a>在打开的窗口之间切换。</li></ul></li><li><h4 id="而当你摁下-alt-键的同时摁-prt-scr-它就会默认帮你截取当前窗口-而不是当前屏幕。这在一些媒体图片制作和屏幕截取中-非常方便。" tabindex="-1"><a class="header-anchor" href="#而当你摁下-alt-键的同时摁-prt-scr-它就会默认帮你截取当前窗口-而不是当前屏幕。这在一些媒体图片制作和屏幕截取中-非常方便。"><span><mark>而当你摁下 Alt 键的同时摁 Prt Scr</mark>，它就会默认帮你截取当前窗口，而不是当前屏幕。这在一些媒体图片制作和屏幕截取中，非常方便。</span></a></h4></li><li><p>win+. / win+; emoji</p></li><li><p>ctrl+esc 开始界面</p></li><li><p>Win+1/2..会跳到下面任务栏指定的应用 偶然发现！！！</p></li><li><p>ctrl + home 可以到头，而home只能到光标在这行行头</p></li><li><p>ctrl+. 可以切换中英文标点</p></li><li><p>Win+，：临时查看桌面</p></li></ul><blockquote><p><mark>快捷方式可以绑定快捷键！！！</mark></p></blockquote><img src="https://pub-83c20763effa4ac69b4d6a9e22c9936e.r2.dev/img/202211181821108.png" alt="image-20221118182139346" style="zoom:50%;"><h1 id="_2-开机自启" tabindex="-1"><a class="header-anchor" href="#_2-开机自启"><span>2.开机自启</span></a></h1><blockquote><p>一些电脑自启动的东西，可以丢到一个目录</p></blockquote><p><code>C:\\Users\\Fighting\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code></p><ul><li>AutoHotkey Script</li><li>espanso Shortcut</li><li>WGestures 2 Shortcut</li><li>天若识字</li></ul><h1 id="_3-cmd" tabindex="-1"><a class="header-anchor" href="#_3-cmd"><span>3.CMD</span></a></h1><blockquote><p>Shell和cmd都是命令行界面下的<strong>解释器</strong>，用于执行命令和脚本。它们的作用类似，但是它们是针对不同的操作系统而设计的。</p><p>在macOS中，默认的shell是Bash（Bourne-Again SHell）直到macOS Catalina（版本10.15）中，Apple将默认的shell从Bash切换到了Zsh（Z Shell）。</p></blockquote><blockquote><p>而在unix系统中，/表示目录。由于web遵循unix命名，所以在网址（URL）中，/表示目录。</p></blockquote><h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips"><span>Tips</span></a></h2><ul><li><p>⭐️ 当前行输错了：可以<code>esc</code> / ctrl c 到下一行重新键入</p></li><li><p><code>@echo off</code> 命令用于关闭命令提示符窗口中的命令回显，这样在执行命令时，命令行窗口将不会输出命令本身。</p></li><li><p>在 Windows 命令行中，使用双冒号（::）可以添加注释</p></li><li><p>set /p sourceDir=请输入源文件夹路径（例如：D:\\test）： 【录入用户键入！！】</p></li><li><p>在Windows中，要设置环境变量，可以使用以下命令：</p><ol><li><p>使用 <code>set</code> 命令：可以使用 <code>set</code> 命令来设置临时环境变量，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>set MY_VARIABLE=value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将在当前命令提示符会话中设置名为 <code>MY_VARIABLE</code> 的环境变量，并将其值设置为 <code>value</code>。<mark>但是，这种方式设置的环境变量只在当前会话中有效，关闭会话后会失效。</mark></p></li><li><p>使用系统属性窗口：你可以通过打开系统属性窗口来设置永久环境变量。你可以按下 <code>Win + Pause/Break</code> 键来打开系统属性窗口，然后选择 &quot;高级系统设置&quot;，在弹出的对话框中选择 &quot;环境变量&quot;。在环境变量对话框中，你可以添加、编辑或删除系统或用户级别的环境变量。</p></li></ol></li></ul><h2 id="know" tabindex="-1"><a class="header-anchor" href="#know"><span>Know</span></a></h2><p><mark>windows 不区分大小写</mark>（所以文件夹大写小写都一样），Linux 区分</p><p>windows 访问文件是 &quot;\\\\&quot; 反斜杠还得注意转义的问题，而linux是正斜杠 &quot;/&quot; 没有转义问题</p><p><mark>运行 sysdm.cpl 快速打开环境变量</mark>（system administrator . control panel）</p><ul><li><h4 id="start-www-baidu-com" tabindex="-1"><a class="header-anchor" href="#start-www-baidu-com"><span>start www.baidu.com</span></a></h4></li><li><h4 id="explorer-http-www-baidu-com" tabindex="-1"><a class="header-anchor" href="#explorer-http-www-baidu-com"><span>explorer http://www.baidu.com</span></a></h4></li><li><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># .url文件写入，文件名需英文 / win10 直接新建快捷方式就行！</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[InternetShortcut]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">http://www.baidu.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><blockquote><p>cd %~dp0</p><p>%cd% 当前目录</p></blockquote><p>在Windows命令提示符下，&quot;%~dp0&quot;是一种特殊的参数变量，它表示当前批处理文件所在的目录的完整路径，包括盘符和路径。 &quot;d&quot;表示仅返回驱动器号和路径，&quot;p&quot;表示仅返回路径，&quot;0&quot;表示当前脚本的名称，即批处理文件的名称。</p><blockquote><p>右键标记即可复制cmd里面的文字</p></blockquote><blockquote><p>查看外网 IP 地址，可以 curl 查ip的网站 实测curl ipinfo.io 可，ip.cn没内容</p></blockquote><p>也可以在 curl 后加别的网址，例如 <a href="https://link.zhihu.com/?target=http%3A//ip.cn" target="_blank" rel="noopener noreferrer">http://ip.cn</a>。另外，也可以直接把 <a href="https://link.zhihu.com/?target=http%3A//ipinfo.io" target="_blank" rel="noopener noreferrer">http://ipinfo.io</a> 复制到浏览器中访问。curl 是 Windows 10 系统新增的命令。</p><blockquote><p><strong>通过 Ping DNS 来决定看用哪一个 DNS 比如我现在测试的 223.5.5.5 比 114.114.114.114 要快！</strong></p></blockquote><blockquote><ol><li>Linux 命令终端的清屏命令/快捷键：Clear，Ctrl+L</li><li>Windows <a href="https://so.csdn.net/so/search?q=CMD&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">CMD</a> 或者 Navicat 命令窗口的清屏命令：Clear 或者 CLS <ul><li>实测 CMD 只能 cls</li></ul></li></ol></blockquote><blockquote><p><strong>修改环境变量不重启生效：set PATH=C:</strong></p></blockquote><blockquote><p>cd /d [对应目录] //可以跨盘cd</p></blockquote><blockquote><p>Hosts 改完需要以下命令生效 ipconfig /flushdns</p></blockquote><blockquote><p>端口被占</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#查看被占用端口对应的 PID</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -aon</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">findstr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;9000&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#查看指定 PID 的进程</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tasklist</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">findstr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;1&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#强制（/F参数）杀死 pid 为 9000 的所有进程包括子进程（/T参数）：</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">taskkill</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /T</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /F</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /PID</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 9000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-删除文件夹没权限" tabindex="-1"><a class="header-anchor" href="#_4-删除文件夹没权限"><span>4.删除文件夹没权限！</span></a></h1><p>Everyone -&gt; 勾选 替换子容器和对象的所有者（重点！容易忽略）</p><p>要是还删不了了，就到资源监视器中<strong>搜索句柄</strong>搜这个文件夹名字，我这里是被Typora占用了，结束的就可以了</p><p><strong>新发现：可能并不是权限问题，就是单纯被占用了 句柄里查被谁占用关掉就行 例如typora、sublime</strong></p><p>新发现：直接到删不了的目录里面一层去删就行</p><h1 id="_5-守护进程" tabindex="-1"><a class="header-anchor" href="#_5-守护进程"><span>5.守护进程</span></a></h1><p>nssm相对sc有什么优势：类似linux环境下的守护进程</p><blockquote><p>想把 tomcat 整成服务！ sc 发现把tomcat9.exe变成服务启动不了 nssm 可以！ tomcat9.exe 是由 service.bat install 命令生成！！！</p><blockquote><p>发现：tomcat中，只有这个tomcat9.exe能做成服务，其它bat做不成（bat都是新open一个黑底白字的cmd） bokedee的bat就能直接做成服务</p><p>做成服务的这两者sc做成的都不能跑！所以 nssm 还是牛的</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">service.bat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> remove</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">service.bat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>NSSM（Non-Sucking Service Manager）和SC（Service Control）都是Windows系统中的服务管理工具。它们都可以用于创建、配置、启动、停止和删除Windows服务。</p><p>以下是NSSM相对于SC的一些优势：</p><ol><li>更加稳定：NSSM比SC更加稳定，可以更好地处理Windows服务的异常情况，如服务崩溃、服务死锁等。</li><li>更加灵活：NSSM提供了更多的选项和配置，可以对服务进行更加细粒度的控制，如服务启动类型、服务重启策略、服务优先级等。</li><li>更加易用：NSSM提供了可视化的用户界面，可帮助用户更加轻松地创建和管理Windows服务。</li><li>更加可靠：NSSM支持服务的自动重启，并提供了对服务的监控和报警机制，可帮助用户及时发现和解决服务问题。</li></ol><p>总之，NSSM相对于SC具有更加稳定、灵活、易用和可靠的优势，尤其适用于需要管理大量Windows服务的场景，如服务器集群、容器等。</p><h1 id="tips-1" tabindex="-1"><a class="header-anchor" href="#tips-1"><span>Tips</span></a></h1><p>ARM架构不是指的操作系统的指令集架构吗，为什么win11既能支持ARM又能支持x86</p><p>你说得对，ARM架构指的是处理器的指令集架构，而不是操作系统本身的架构。ARM架构的处理器和x86架构的处理器使用不同的指令集，因此需要不同的操作系统和应用程序来支持。</p><p>Windows 11是一种多架构操作系统，它被设计为能够在不同架构的处理器上运行。这意味着它可以同时支持基于ARM架构和x86架构的设备。为了实现这一点，微软在Windows 11中引入了一个名为&quot;Universal WindowsPlatform&quot;（通用Windows平台）的技术，它允许开发人员编写一次代码，然后将应用程序打包为可以在不同架构的设备上运行的应用程序包。因此，不管是ARM架构还是x86架构的设备，Windows11都可以运行应用程序，而无需进行修改或适配。</p>',51)],t={},l=(0,a(9874).A)(t,[["render",function(i,e){return(0,s.uX)(),(0,s.CE)("div",null,n)}]]),r=JSON.parse('{"path":"/code/408-PC/Windows.html","title":"Windows","lang":"zh-CN","frontmatter":{"article":false,"updated":"2025-08-23T15:09:03.000Z","description":"Windows win 上用linux CLI： 2020年9月，WSL 2开始向Windows 10 Version 1903/1909和Windows 10 May 2020（20H1/Version 2004）的用户推送。WSL 2支持GUI应用[19]。 C:\\\\Windows 路径 exe 文件可以直接 cmd 调用 将文件重命名为 jq.ex...","head":[["meta",{"property":"og:url","content":"https://zzq8.cn/code/408-PC/Windows.html"}],["meta",{"property":"og:site_name","content":"Piglet"}],["meta",{"property":"og:title","content":"Windows"}],["meta",{"property":"og:description","content":"Windows win 上用linux CLI： 2020年9月，WSL 2开始向Windows 10 Version 1903/1909和Windows 10 May 2020（20H1/Version 2004）的用户推送。WSL 2支持GUI应用[19]。 C:\\\\Windows 路径 exe 文件可以直接 cmd 调用 将文件重命名为 jq.ex..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Piglet"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Windows\\",\\"description\\":\\"Windows win 上用linux CLI： 2020年9月，WSL 2开始向Windows 10 Version 1903/1909和Windows 10 May 2020（20H1/Version 2004）的用户推送。WSL 2支持GUI应用[19]。 C:\\\\\\\\Windows 路径 exe 文件可以直接 cmd 调用 将文件重命名为 jq.ex...\\"}"]]},"headers":[{"level":2,"title":"Tips","slug":"tips","link":"#tips","children":[]},{"level":2,"title":"Know","slug":"know","link":"#know","children":[]}],"git":{"createdTime":1715785276000,"contributors":[{"name":"Fighting","email":"1024zzq@gmail.com","commits":2},{"name":"MacAir","email":"1024zzq@gmail.com","commits":2}]},"readingTime":{"minutes":7.49,"words":2248},"filePathRelative":"code/408-PC/Windows.md","localizedDate":"2024年5月15日","excerpt":"\\n<p>win 上用linux CLI：</p>\\n<p>2020年9月，<mark>WSL</mark> 2开始向Windows 10 Version 1903/1909和Windows 10 May 2020（20H1/Version 2004）的用户推送。WSL 2支持<a href=\\"https://zh.wikipedia.org/wiki/GUI\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GUI</a>应用[<a href=\\"https://zh.wikipedia.org/zh-cn/%E9%80%82%E7%94%A8%E4%BA%8ELinux%E7%9A%84Windows%E5%AD%90%E7%B3%BB%E7%BB%9F#cite_note-19\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">19]</a>。</p>","autoDesc":true}')}}]);